# -*- indent-tabs-mode: nil; -*-

@given Conversion[`()`, Int] = _.as[Int]

@val ! : String => IO[String] = { _ => IO.pure(null) }

Main = ν(a,b,c)             \
     ( (!.a<"a">.)          \
     | (!.b<"b">.)          \
     | (!.c<"c">.)          \
     | Hanoi(a,b,c,/*-1*/)  \
     )

Hanoi(a,b,c,n) = ν(w)                                        \
               ( τ/* _ <- IO.print("n = ");                  \
                    'n <- IO.blocking {                      \
                            try                              \
                              scala.io.StdIn.readLine.toInt  \
                            catch _ => -1                    \
                          }                                  \
                   */.                                       \
                 Hanoi(a,b,c,n,w)                            \
               | w(w). τ/*println(s"#${'w} moves")*/.        \
                       a(a)/*!*/. b(b)/*!*/. c(c)/*!*/.      \
               )

Move(from,to,z) = from(x).to(y).                    \
                  τ/*println(s"${'x} -> ${'y}")*/.  \
                                z</*1*/>.

Hanoi(a,b,c,n,w) = if /*'n <= 1*/ = True                         \
                   then ν(z) ( Move(a,c,z) | z(z).w<z>. )        \
                   else ν(x)                                     \
                      ( Hanoi(a,c,b,/*'n-1*/,x)                  \
                      | x(x). ν(y)                               \
                              ( Move(a,c,y)                      \
                              | y(y). ν(z)                       \
                                      ( Hanoi(b,a,c,/*'n-1*/,z)  \
                                      | z(z).w</*'x+'y+'z*/>.    \
                                      )                          \
                              )                                  \
                      )
